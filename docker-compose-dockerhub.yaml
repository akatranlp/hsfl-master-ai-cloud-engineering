version: "3.9"

services:
  proxy:
    ports:
      - "8080:8080"
    image: akatranlp/reverse-proxy:latest
    # restart: unless-stopped
    environment:
      PORT: 8080
      CONFIG_FILE: $CONFIG_FILE
    links:
      - web
      - user
      - book
      - transaction
  web:
    image: akatranlp/web-service:latest
    # restart: unless-stopped
  user:
    build:
      context: .
      dockerfile: ./src/user-service/Dockerfile
    environment:
      PORT: 8080
      JWT_PRIVATE_KEY: $JWT_PRIVATE_KEY
      JWT_PUBLIC_KEY: $JWT_PUBLIC_KEY
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      TZ: Europe/Berlin
    # restart: unless-stopped
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
  book:
    image: akatranlp/book-service:latest
    environment:
      AUTH_URL_ENDPOINT: user/validate_token
      PORT: 8080
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      TZ: Europe/Berlin
    # restart: unless-stopped
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
  transaction:
    image: akatranlp/transaction-service:latest
    environment:
      AUTH_URL_ENDPOINT: user/validate_token
      BOOK_SERVICE_ENDPOINT: book/verify_chapter_id
      USER_SERVICE_ENDPOINT: book/move_user_amount
      PORT: 8080
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      TZ: Europe/Berlin
    # restart: unless-stopped
    links:
      - db
    depends_on:
      db:
        condition: service_healthy
  db:
    build:
      context: ./src/db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      TZ: Europe/Berlin
    # restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
